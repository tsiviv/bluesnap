{"ast":null,"code":"var _jsxFileName = \"/home/tsivi/bluesnap/client/src/Modal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './Modal.css'; // Make sure to create a CSS file to style your modal\nimport Cookies from 'js-cookie';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Modal = ({\n  isOpen,\n  closeModal,\n  children,\n  subscriptionPlanId\n}) => {\n  _s();\n  //   if (!isOpen) return null;\n  const axiosInstance = axios.create({\n    baseURL: 'https://localhost:8443/api',\n    // Replace with your server's base URL\n    timeout: 5000,\n    // Timeout in milliseconds\n    withCredentials: true // Include cookies in CORS requests\n  });\n  const [hostedPaymentFieldsToken, setHostedPaymentFieldsToken] = useState('');\n  const [exp, setexp] = useState(\"\");\n  const [isBluesnapLoaded, setIsBluesnapLoaded] = useState(false);\n  const saveAuthDetailsToCookies = () => {\n    const API_USERNAME = 'API_17193957133152076686385';\n    const API_PASSWORD = 'P@ssword_Example1';\n    Cookies.set('api_username', API_USERNAME, {\n      expires: 7\n    });\n    Cookies.set('api_password', API_PASSWORD, {\n      expires: 7\n    });\n  };\n  const getAuthHeaders = () => {\n    const API_USERNAME = Cookies.get('api_username');\n    const API_PASSWORD = Cookies.get('api_password');\n    const encodedCredentials = btoa(`${API_USERNAME}:${API_PASSWORD}`);\n    return {\n      'Authorization': `Basic ${encodedCredentials}`,\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n    };\n  };\n  useEffect(() => {\n    console.log(isOpen);\n    if (isOpen) {\n      saveAuthDetailsToCookies();\n      const loadBluesnapSDK = async () => {\n        try {\n          const script = document.createElement('script');\n          script.src = 'https://sandbox.bluesnap.com/web-sdk/latest/bluesnap.js';\n          script.async = true;\n          script.onload = () => {\n            setIsBluesnapLoaded(true);\n            console.log(window.bluesnap);\n            // Call BlueSnap SDK functions here\n            handleCreateSubscription();\n          };\n          script.setAttribute('nonce', window.__nonce__);\n          document.body.appendChild(script);\n        } catch (error) {\n          console.error('Failed to load BlueSnap SDK:', error);\n        }\n      };\n      loadBluesnapSDK();\n    }\n  }, [isOpen]);\n  const handleCreateSubscription = async () => {\n    try {\n      // Step 1: Obtain the Hosted Payment Fields Token\n      const tokenResponse = await axiosInstance.post(`/token`, {}, {\n        headers: getAuthHeaders()\n      });\n      const locationHeader = tokenResponse.data.tokenLocation;\n      const hostedFieldTokenId = locationHeader.split('/').pop();\n      setHostedPaymentFieldsToken(hostedFieldTokenId);\n      // Step 2: Check if Bluesnap SDK is loaded\n\n      console.log(isBluesnapLoaded);\n      if (window.bluesnap) {\n        // Step 3: Set up secured payment collection with Bluesnap SDK\n        console.log(hostedFieldTokenId);\n        window.bluesnap.hostedPaymentFieldsCreate({\n          token: hostedFieldTokenId,\n          styles: {\n            base: {\n              fontFamily: 'Arial, sans-serif',\n              fontSize: '16px',\n              color: '#333333',\n              '::placeholder': {\n                color: '#45215'\n              }\n            },\n            invalid: {\n              color: '#ff0000'\n            }\n          },\n          onFieldEventHandler: {\n            onFocus: tagId => {\n              console.log('Focus event on field:', tagId);\n            },\n            onBlur: tagId => {\n              console.log('Blur event on field:', tagId);\n            },\n            onError: (tagId, error) => {\n              console.error('Error on field ' + tagId + ':', error);\n            },\n            onType: (tagId, inputData) => {\n              console.log('User input on field ' + tagId + ':', inputData);\n            }\n          },\n          onError: error => {\n            console.error('Error creating hosted payment fields:', error);\n          }\n        });\n      } else {\n        console.error('Bluesnap SDK is not loaded');\n      }\n    } catch (error) {\n      console.error('Error obtaining payment token:', error);\n    }\n  };\n  const handleSubmitPayment = e => {\n    e.preventDefault();\n    console.log(exp);\n    console.log(window.blu);\n    if (window.bluesnap && window.bluesnap.hostedPaymentFieldsSubmitData) {\n      window.bluesnap.hostedPaymentFieldsSubmitData(submitResponse => {\n        console.log('Submission callback executed');\n        if (submitResponse.transactionFraudInfo) {\n          console.log(submitResponse.transactionFraudInfo);\n          const encryptedData = submitResponse.transactionFraudInfo.fraudSessionId;\n          console.log('Encrypted card data:', encryptedData);\n\n          // Prepare request object to create subscription or process payment\n          const request = {\n            payerInfo: {\n              zip: 102453,\n              firstName: 'John',\n              lastName: 'Doe',\n              phone: 1234567890\n            },\n            paymentSource: {\n              creditCardInfo: {\n                pfToken: hostedPaymentFieldsToken\n              }\n            },\n            planId: subscriptionPlanId,\n            // Replace with your subscription plan ID\n            transactionFraudInfo: {\n              fraudSessionId: 1234,\n              customerId: 121341,\n              customerCreationDate: '2025-08-05'\n            }\n          };\n\n          // Call function to create subscription or process payment using the prepared request\n          closeModal(request);\n          //   createSubscription(request);\n        } else {\n          console.error('Card data not received from SDK');\n        }\n      }, error => {\n        console.error('submitData error:', error); // Log any errors\n      });\n    } else {\n      console.error('Bluesnap SDK is not loaded or function not available');\n    }\n  };\n  function s(e) {\n    console.log(s);\n    setexp(e);\n  }\n  if (!isOpen) {\n    return null; // Return null if isOpen is false to exit the component\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmitPayment,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          \"data-bluesnap\": \"ccn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          \"data-bluesnap\": \"exp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          \"data-bluesnap\": \"cvv\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          \"data-bluesnap\": \"submitButton\",\n          type: \"submit\",\n          id: \"submit-button\",\n          children: \"Pay Now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-button\",\n        onClick: closeModal,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 5\n  }, this);\n};\n_s(Modal, \"iYNMK9ZY/VILjwY0CY8IndHiC/M=\");\n_c = Modal;\nexport default Modal;\nvar _c;\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Cookies","axios","jsxDEV","_jsxDEV","Modal","isOpen","closeModal","children","subscriptionPlanId","_s","axiosInstance","create","baseURL","timeout","withCredentials","hostedPaymentFieldsToken","setHostedPaymentFieldsToken","exp","setexp","isBluesnapLoaded","setIsBluesnapLoaded","saveAuthDetailsToCookies","API_USERNAME","API_PASSWORD","set","expires","getAuthHeaders","get","encodedCredentials","btoa","console","log","loadBluesnapSDK","script","document","createElement","src","async","onload","window","bluesnap","handleCreateSubscription","setAttribute","__nonce__","body","appendChild","error","tokenResponse","post","headers","locationHeader","data","tokenLocation","hostedFieldTokenId","split","pop","hostedPaymentFieldsCreate","token","styles","base","fontFamily","fontSize","color","invalid","onFieldEventHandler","onFocus","tagId","onBlur","onError","onType","inputData","handleSubmitPayment","e","preventDefault","blu","hostedPaymentFieldsSubmitData","submitResponse","transactionFraudInfo","encryptedData","fraudSessionId","request","payerInfo","zip","firstName","lastName","phone","paymentSource","creditCardInfo","pfToken","planId","customerId","customerCreationDate","s","className","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onClick","_c","$RefreshReg$"],"sources":["/home/tsivi/bluesnap/client/src/Modal.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './Modal.css'; // Make sure to create a CSS file to style your modal\nimport Cookies from 'js-cookie';\nimport axios from 'axios';\n\nconst Modal = ({ isOpen, closeModal, children,subscriptionPlanId }) => {\n//   if (!isOpen) return null;\nconst axiosInstance = axios.create({\n  baseURL: 'https://localhost:8443/api', // Replace with your server's base URL\n  timeout: 5000, // Timeout in milliseconds\n  withCredentials: true, // Include cookies in CORS requests\n  \n});const [hostedPaymentFieldsToken, setHostedPaymentFieldsToken] = useState('');\n  const [exp,setexp]=useState(\"\")\n  const [isBluesnapLoaded, setIsBluesnapLoaded] = useState(false);\n  const saveAuthDetailsToCookies = () => {\n    const API_USERNAME = 'API_17193957133152076686385';\n    const API_PASSWORD = 'P@ssword_Example1';\n    Cookies.set('api_username', API_USERNAME, { expires: 7 });\n    Cookies.set('api_password', API_PASSWORD, { expires: 7 });\n  };\n\n  const getAuthHeaders = () => {\n    const API_USERNAME = Cookies.get('api_username');\n    const API_PASSWORD = Cookies.get('api_password');\n    const encodedCredentials = btoa(`${API_USERNAME}:${API_PASSWORD}`);\n    return {\n      'Authorization': `Basic ${encodedCredentials}`,\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n    };\n  };\n  useEffect(() => {\n    console.log(isOpen)\n    if (isOpen){\n    saveAuthDetailsToCookies();\n  \n    const loadBluesnapSDK = async () => {\n      try {\n        const script = document.createElement('script');\n        script.src = 'https://sandbox.bluesnap.com/web-sdk/latest/bluesnap.js';\n        script.async = true;\n        script.onload = () => {\n        setIsBluesnapLoaded(true);\n        console.log(window.bluesnap)\n          // Call BlueSnap SDK functions here\n        handleCreateSubscription() \n        };\n        script.setAttribute('nonce', window.__nonce__);\n        document.body.appendChild(script);\n      } catch (error) {\n        console.error('Failed to load BlueSnap SDK:', error);\n      }\n    };\n  \n    loadBluesnapSDK();}\n  }, [isOpen]);\n  \n  const handleCreateSubscription = async () => {\n   \n\n    try {\n      // Step 1: Obtain the Hosted Payment Fields Token\n      const tokenResponse = await axiosInstance.post(`/token`, {}, { headers: getAuthHeaders() });\n      const locationHeader = tokenResponse.data.tokenLocation;\n      const hostedFieldTokenId = locationHeader.split('/').pop();\n      setHostedPaymentFieldsToken(hostedFieldTokenId);\n      // Step 2: Check if Bluesnap SDK is loaded\n\n      console.log(isBluesnapLoaded)\n      if (  window.bluesnap) {\n        // Step 3: Set up secured payment collection with Bluesnap SDK\n        console.log(hostedFieldTokenId)\n        window.bluesnap.hostedPaymentFieldsCreate({\n          token: hostedFieldTokenId,\n          styles: {\n            base: {\n              fontFamily: 'Arial, sans-serif',\n              fontSize: '16px',\n              color: '#333333',\n              '::placeholder': {\n                color: '#45215'\n              }\n            },\n            invalid: {\n              color: '#ff0000'\n            }\n          },\n          onFieldEventHandler: {\n            onFocus: (tagId) => {\n              console.log('Focus event on field:', tagId);\n            },\n            onBlur: (tagId) => {\n              console.log('Blur event on field:', tagId);\n            },\n            onError: (tagId, error) => {\n              console.error('Error on field ' + tagId + ':', error);\n            },\n            onType: (tagId, inputData) => {\n              console.log('User input on field ' + tagId + ':', inputData);\n            }\n          },\n          onError: (error) => {\n            console.error('Error creating hosted payment fields:', error);\n          }\n        });\n  \n      } else {\n        console.error('Bluesnap SDK is not loaded');\n      }\n    } catch (error) {\n      console.error('Error obtaining payment token:', error);\n    }\n  };\n\n  const handleSubmitPayment = (e) => {\n    e.preventDefault()\n    console.log(exp)\n    console.log(window.blu)\n    if (window.bluesnap && window.bluesnap.hostedPaymentFieldsSubmitData) {\n      window.bluesnap.hostedPaymentFieldsSubmitData((submitResponse) => {\n        console.log('Submission callback executed');\n        \n        if (submitResponse.transactionFraudInfo) {\n          console.log(submitResponse.transactionFraudInfo)\n          const encryptedData = submitResponse.transactionFraudInfo.fraudSessionId;\n          console.log('Encrypted card data:', encryptedData);\n  \n          // Prepare request object to create subscription or process payment\n          const request = {\n            payerInfo: {\n              zip: 102453,\n              firstName: 'John',\n              lastName: 'Doe',\n              phone: 1234567890\n            },\n            paymentSource: {\n              creditCardInfo: {\n                pfToken: hostedPaymentFieldsToken\n              }\n            },\n            planId: subscriptionPlanId, // Replace with your subscription plan ID\n            transactionFraudInfo: {\n              fraudSessionId: 1234,\n              customerId: 121341,\n              customerCreationDate: '2025-08-05'\n            }\n          };\n  \n          // Call function to create subscription or process payment using the prepared request\n          closeModal(request)\n        //   createSubscription(request);\n        } else {\n          console.error('Card data not received from SDK');\n        }\n      }, (error) => {\n        console.error('submitData error:', error); // Log any errors\n      });\n    } else {\n      console.error('Bluesnap SDK is not loaded or function not available');\n    }\n  };\n  function s(e){\n    console.log(s)\n    setexp(e)\n  }\n  if (!isOpen) {\n    return null; // Return null if isOpen is false to exit the component\n  }\n  return (\n    <div className=\"modal-overlay\">\n      <div className=\"modal-content\">\n      <form onSubmit={handleSubmitPayment}>\n        <div data-bluesnap=\"ccn\"  ></div>\n        <div data-bluesnap=\"exp\"></div>\n        <div data-bluesnap=\"cvv\"></div>\n        <button data-bluesnap=\"submitButton\" type=\"submit\" id=\"submit-button\">Pay Now</button>\n      </form>\n        <button className=\"close-button\" onClick={closeModal}>×</button>\n        {children}\n      </div>\n      \n    </div>\n  );\n};\n\nexport default Modal;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}